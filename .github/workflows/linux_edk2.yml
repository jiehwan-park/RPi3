# Copyright (c) 2021, Pete Batard <pete@akeo.ie>
# SPDX-License-Identifier: BSD-2-Clause-Patent

name: UEFI firmware - EDK2 build

on:  
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Set version
      id: set_version
      run: echo "::set-output name=version::${GITHUB_REF/refs\/tags\//}"
    - name: Check out EDK2 repositories
      uses: actions/checkout@v2
    - name: Check out EDK2 submodules
      run: git submodule update --init --recursive
    - name: Set up EDK2
      run: make -C edk2/BaseTools
    - name: Build UEFI firmware
      run: |
        export WORKSPACE=$PWD
        export PACKAGES_PATH=$WORKSPACE/edk2:$WORKSPACE/edk2-platforms:$WORKSPACE/edk2-non-osi
        export GCC5_AARCH64_PREFIX=aarch64-linux-gnu-
        export BUILD_FLAGS="-D SECURE_BOOT_ENABLE=TRUE -D INCLUDE_TFTP_COMMAND=TRUE -D NETWORK_ISCSI_ENABLE=TRUE"
        source edk2/edksetup.sh
        # EDK2's 'build' command doesn't play nice with spaces in environmnent variables, so we can't move the PCDs there...
        build -a AARCH64 -t GCC5 -p edk2-platforms/Platform/RaspberryPi/RPi3/RPi3.dsc -b DEBUG --pcd gEfiMdeModulePkgTokenSpaceGuid.PcdFirmwareVendor=L"https://github.com/pftf/RPi3" --pcd gEfiMdeModulePkgTokenSpaceGuid.PcdFirmwareVersionString=L"UEFI Firmware ${{steps.set_version.outputs.version}}" ${BUILD_FLAGS}
        # build -a AARCH64 -t GCC5 -p edk2-platforms/Platform/RaspberryPi/RPi3/RPi3.dsc -b RELEASE --pcd gEfiMdeModulePkgTokenSpaceGuid.PcdFirmwareVendor=L"https://github.com/pftf/RPi3" --pcd gEfiMdeModulePkgTokenSpaceGuid.PcdFirmwareVersionString=L"UEFI Firmware ${{steps.set_version.outputs.version}}" ${BUILD_FLAGS}
    - name: Create UEFI firmware archive
      run: |
        [ -d "Build/RPi3/Artifacts" ] && rm -rf Build/RPi3/Artifacts
        mkdir Build/RPi3/Artifacts
        cp Build/RPi3/DEBUG_GCC5/FV/RPI_EFI.fd Build/RPi3/Artifacts/
        cp -rf grub/* Build/RPi3/Artifacts/
        cp -rf kernel/* Build/RPi3/Artifacts/
        cp -rf rpi3-boot/bootcode.bin Build/RPi3/Artifacts/
        cp -rf rpi3-boot/fixup.dat Build/RPi3/Artifacts/
        cp -rf rpi3-boot/start.elf Build/RPi3/Artifacts/
        cp config.txt Build/RPi3/Artifacts/
        echo "Results in Build/RPi3/Artifacts"
        ls -alh Build/RPi3/Artifacts
